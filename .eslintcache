[{"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx":"1","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx":"2","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx":"3","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx":"4","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx":"5","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx":"6","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.jsx":"7","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\store.js":"8","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\reducer.js":"9","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\types.js":"10","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\actions.js":"11","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.jsx":"12"},{"size":1540,"mtime":1609837332050,"results":"13","hashOfConfig":"14"},{"size":3292,"mtime":1609874015247,"results":"15","hashOfConfig":"14"},{"size":2891,"mtime":1609873960406,"results":"16","hashOfConfig":"14"},{"size":639,"mtime":1609849829354,"results":"17","hashOfConfig":"14"},{"size":5978,"mtime":1609874002714,"results":"18","hashOfConfig":"14"},{"size":1675,"mtime":1609873990702,"results":"19","hashOfConfig":"14"},{"size":334,"mtime":1609849829362,"results":"20","hashOfConfig":"14"},{"size":457,"mtime":1609874847215,"results":"21","hashOfConfig":"14"},{"size":2455,"mtime":1609874239964,"results":"22","hashOfConfig":"14"},{"size":189,"mtime":1609849829370,"results":"23","hashOfConfig":"14"},{"size":483,"mtime":1609849829368,"results":"24","hashOfConfig":"14"},{"size":2060,"mtime":1609873982362,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"l03eey",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx",[],["58","59"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx",["60","61"],"import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport {useSelector, useDispatch} from 'react-redux'\n// import {addItem} from '../redux/actions'\nimport {addItem} from '../redux/reducer'\n\nimport { format } from 'date-fns';\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    },\n    btn: {\n        marginLeft: \"30px\",\n        marginTop: \"10px\"\n    },\n  }),\n);\n\nconst CreateArticle = () => {\n    const classes = useStyles();\n    const todos = useSelector(item => item.items)\n    const dispatch = useDispatch()\n    const [title, setTitle] = React.useState('')\n    const [text, setText] = React.useState('')\n\n    const [todo, _] = React.useState(todos)\n    const history = useHistory()\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(title.length > 0){\n            const newItem = {\n                 id: todo.length + 1,\n                 title,\n                 text,\n                 like: 0,\n                 date: format(new Date(), 'dd/MM/yyyy kk:mm') \n            }\n            dispatch(addItem(newItem))\n            setTitle('')\n            setText('')\n            history.push('/')\n        }\n        else{\n            alert('Укажите заголовок статьи ')\n        }\n        \n    }\n    return (\n        <div className='create-article'>\n            <Grid container>\n                <Grid item xs={3}>\n                    <Link to='/'>\n                        <IconButton aria-label=\"delete\">\n                            <ArrowBackIcon />\n                        </IconButton>\n                    </Link>\n                </Grid>\n                <Grid item xs={7}>\n                <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                    <div>\n                        <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Заголовок\"\n                        multiline\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        variant=\"outlined\"\n                        />\n                        <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Текст\"\n                        multiline\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        rows={4}\n                        variant=\"outlined\"\n                        />\n                    </div>\n                    <Button className={classes.btn} variant=\"contained\" onClick={handleSubmit}  color=\"primary\" disableElevation>\n                    Опубликовать\n                    </Button>\n                </form>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default CreateArticle\n",["62","63"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx",["64","65","66"],"import React from 'react';\nimport {Link, useHistory, withRouter} from 'react-router-dom'\n\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport {useSelector} from 'react-redux'\n\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n    },\n    link: {\n      cursor: \"pointer\"\n    }\n  }),\n);\n\nfunction ArticleListItem({title, like, id, date}) {\n  const classes = useStyles();\n  const history = useHistory()\n\n  const [likes, setLikes] = React.useState(like)\n  const [check, setCheck] = React.useState(false)\n\n  const handleLike = () => {\n    if(check){\n      setLikes(likes - 1)\n      setCheck(!check)\n    }\n    if(!check){\n      setLikes(likes +  1)\n      setCheck(!check)\n    }   \n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        subheader={date}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" className={classes.link} color=\"textSecondary\" component=\"p\" onClick={() => {\n            history.push(`/${id}`)}}>\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\" color={check ? 'secondary' : 'textSecondary'} onClick={handleLike}>\n          <FavoriteIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color={check ? 'secondary' : 'textSecondary'} component=\"span\">\n          {likes}\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst ArticleList = () => {\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [isError, setIsError] = React.useState(false)\n  const todos = useSelector(item => item.items)\n  const [todos2, setTodos2] = React.useState(todos)\n\n  React.useEffect(() => {\n    setIsLoading(false)\n    setIsError(false)\n    console.log('Before',todos)\n    setTodos2(todos)\n    console.log('After',todos2)\n  }, [todos, todos2])\n  \n    return (\n        <div className='article-list'>\n            <Grid container>\n                {isLoading && <p>Loading</p>}\n                {isError && <p>Error</p>}\n                {todos2.length == 0 && <p>Нет публикаций</p>}\n                  {todos2.map((obj) => {\n                    return <Grid item key={obj.id}  xs={3}>\n                    <ArticleListItem title={obj.title} id={obj.id} like={obj.like} date={obj.date} />\n                    </Grid>\n                  })}  \n            </Grid>\n        </div>\n    )\n}\n\nexport default withRouter(ArticleList)","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx",["67","68","69","70"],"import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport {useSelector, useDispatch} from 'react-redux'\n// import {removeItem, editItem} from '../redux/actions'\nimport {removeItem, editItem} from '../redux/reducer'\n\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    },\n    block: {\n        marginLeft: '20px'\n    }\n  }),\n);\n\nconst Article= ({arcId}) => {\n    const classes = useStyles();\n    const [off, setOff] = React.useState(false)\n    const todos = useSelector(item => item.items)\n    const dispatch = useDispatch()\n    const findItem = todos.find((todo) => todo.id == arcId)\n    const history = useHistory()\n\n    const [editing, setEditing] = React.useState(false)\n    const [title, setTitle] = React.useState(findItem.title)\n    const [text, setText] = React.useState(findItem.text)\n    React.useEffect(() => {\n        \n    }, [findItem])\n    const removeTodo = () => {\n        if (global.confirm('Вы действительно хотите удалить?')) {\n            const idx = todos.findIndex((state) => state.id == arcId);\n            const items = [\n                ...todos.slice(0, idx),\n                ...todos.slice(idx + 1)\n              ]\n            dispatch(removeItem(items))\n            history.push('/')\n          }\n    }\n\n    const handleEdit = (e) => {\n        e.preventDefault()\n        const newEditItem = {\n            id: findItem.id,\n            title,\n            text,\n            like: findItem.like,\n            date: findItem.date\n        }\n        const findItemArray = todos.findIndex((item) => item.id == newEditItem.id);\n        const items = [\n            ...todos.slice(0, findItemArray),\n            ...todos.slice(findItemArray  + 1)\n          ]\n        const edit = [...items, newEditItem]  \n        dispatch(editItem(edit))\n        setEditing(!editing)\n        setOff(!off)\n    }\n\n    return (\n        <div className='article'>\n             <Grid container>\n                <Grid item xs={2}>\n                    <Link to='/'>\n                        <IconButton aria-label=\"delete\">\n                            <ArrowBackIcon />\n                        </IconButton>\n                    </Link>\n                </Grid>\n               <Grid item xs={7}>\n                 {\n                 !editing && \n                 <> <Typography variant=\"h4\" gutterBottom>\n                        {findItem.title}\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {findItem.text}\n                    </Typography> </> \n                    }\n                    {editing && <>\n                        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleEdit}>\n                    <div>\n                        <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Заголовок\"\n                        multiline\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        variant=\"outlined\"\n                        />\n                        <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Текст\"\n                        multiline\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        rows={4}\n                        variant=\"outlined\"\n                        />\n                    </div>\n                </form>\n                    </>}\n                </Grid>\n                <Grid item xs={3}>\n                    <IconButton onClick={() => setOff(!off)} aria-label=\"delete\">\n                        <MoreVertIcon />\n                    </IconButton>\n                    {off && <Grid container>\n                        <div className={classes.block}>\n                        <Grid item xs={12}>\n                           {!editing && <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            onClick={() => setEditing(!editing)}\n                            startIcon={<CreateIcon />}\n                            >\n                            Редактировать\n                            </Button>}\n                            {editing && <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            onClick={handleEdit}\n                            startIcon={<CheckIcon/>}\n                            >\n                            Готово\n                            </Button>} \n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={removeTodo}\n                            startIcon={<DeleteIcon />}\n                            >\n                            Удалить\n                            </Button>\n                        </Grid>\n                        </div>\n                    </Grid>}\n                </Grid>\n                \n            </Grid>\n        </div>\n    )\n}\n\n\nexport default Article\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx",["71","72"],"import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// import {searchItem} from '../redux/actions'\nimport {searchItem} from '../redux/reducer'\nimport {useDispatch, useSelector} from 'react-redux'\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\nexport default function Search() {\n  const [searchTerm, setSearchTerm] =  React.useState('')\n  const todos = useSelector(item => item.items)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    if (searchTerm.length > 0){\n      const results = todos.filter(todo => todo.title.toLowerCase().includes(searchTerm));\n      dispatch(searchItem(results)) \n  }\n  }, [searchTerm])\n \n  const classes = useStyles();\n  return (\n    <Paper component=\"form\" className={classes.root} >\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <InputBase \n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className={classes.input}\n        placeholder=\"Поиск\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n    </Paper>\n  );\n}\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.jsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\store.js",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\reducer.js",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\types.js",[],["73","74"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\redux\\actions.js",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.jsx",["75","76","77","78"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\n// import {filterItem} from '../redux/actions'\nimport {filterItem} from '../redux/reducer'\nimport {useDispatch, useSelector} from 'react-redux'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport const firterList = {\n  DATE: 'По последним обновлениям',\n  POPULAR: 'По популярности'\n} \n\nexport default function Filter() {\n  const classes = useStyles();\n  const [filter, setFilter] = React.useState(firterList.DATE);\n\n  const todos = useSelector(item => item.items)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    if (filter == firterList.DATE){\n      const sortedData = todos.sort((a,b) => b.id-a.id)\n      dispatch(filterItem(sortedData))  \n  }\n  if (filter == firterList.POPULAR){\n      const sortedPopular = todos.sort((a, b) => b.like-a.like)\n      dispatch(filterItem(sortedPopular))\n  }\n  }, [filter])\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Фильтер</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={filter}\n          onChange={handleChange}\n          label=\"Filter\"\n        >\n          <MenuItem value={firterList.DATE}>По последним обновлениям</MenuItem>\n          <MenuItem value={firterList.POPULAR}>По популярности</MenuItem>\n    \n        </Select>\n      </FormControl>\n      \n    </div>\n  );\n}\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":36,"nodeType":"85","messageId":"86","endLine":9,"endColumn":41},{"ruleId":"83","severity":1,"message":"87","line":42,"column":18,"nodeType":"85","messageId":"86","endLine":42,"endColumn":19},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"88","line":2,"column":9,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":5,"column":22,"nodeType":"85","messageId":"86","endLine":5,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":91,"column":32,"nodeType":"91","messageId":"92","endLine":91,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":21,"column":36,"nodeType":"85","messageId":"86","endLine":21,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":41,"column":51,"nodeType":"91","messageId":"92","endLine":41,"endColumn":53},{"ruleId":"89","severity":1,"message":"90","line":52,"column":61,"nodeType":"91","messageId":"92","endLine":52,"endColumn":63},{"ruleId":"89","severity":1,"message":"90","line":71,"column":65,"nodeType":"91","messageId":"92","endLine":71,"endColumn":67},{"ruleId":"83","severity":1,"message":"84","line":2,"column":22,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":45,"column":6,"nodeType":"95","endLine":45,"endColumn":18,"suggestions":"96"},{"ruleId":"79","replacedBy":"97"},{"ruleId":"81","replacedBy":"98"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":36,"nodeType":"85","messageId":"86","endLine":2,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":38,"column":16,"nodeType":"91","messageId":"92","endLine":38,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":42,"column":14,"nodeType":"91","messageId":"92","endLine":42,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":46,"column":6,"nodeType":"95","endLine":46,"endColumn":14,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["102"],["100"],["101"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [dispatch, searchTerm, todos]",{"range":"108","text":"109"},"Update the dependencies array to be: [dispatch, filter, todos]",{"range":"110","text":"111"},[1178,1190],"[dispatch, searchTerm, todos]",[1291,1299],"[dispatch, filter, todos]"]