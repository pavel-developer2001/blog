[{"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx":"1","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx":"2","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx":"3","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx":"4","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx":"5","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx":"6","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx":"7","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx":"8","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx":"9","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx":"10"},{"size":216,"mtime":1609677450726,"results":"11","hashOfConfig":"12"},{"size":1650,"mtime":1609673696477,"results":"13","hashOfConfig":"12"},{"size":1585,"mtime":1609740627400,"results":"14","hashOfConfig":"12"},{"size":1722,"mtime":1609768005469,"results":"15","hashOfConfig":"12"},{"size":3266,"mtime":1609767509977,"results":"16","hashOfConfig":"12"},{"size":1789,"mtime":1609768163808,"results":"17","hashOfConfig":"12"},{"size":2919,"mtime":1609766562740,"results":"18","hashOfConfig":"12"},{"size":810,"mtime":1609750991265,"results":"19","hashOfConfig":"12"},{"size":3005,"mtime":1609755933811,"results":"20","hashOfConfig":"12"},{"size":1564,"mtime":1609761765818,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"l03eey",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx",[],["49","50"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx",[],["51","52"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx",["53"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Example from '../components/Example'\r\nimport Filter from '../components/Filter'\r\nimport Search from '../components/Search'\r\nimport ArticleList from '../components/ArticleList'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst Home = () => {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <div className='home'>\r\n            <Search />\r\n            <Filter />\r\n            <Grid container>\r\n                <Grid xs={3} item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                    Публикации\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={9} item>\r\n                    <Link to='/create'>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        endIcon={<Icon>add_circle</Icon>}>\r\n                            Создать\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <ArticleList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx",["54"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx",["55","56"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx",["57","58","59"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx",["60","61","62"],"import React from 'react';\r\nimport {Link, useHistory, withRouter} from 'react-router-dom'\r\nimport { TodoContext } from '../TodoContext';\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    link: {\r\n      cursor: \"pointer\"\r\n    }\r\n  }),\r\n);\r\n\r\nfunction ArticleListItem({title, like, id, date}) {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n\r\n  const [likes, setLikes] = React.useState(like)\r\n  const [check, setCheck] = React.useState(false)\r\n\r\n  const handleLike = () => {\r\n    if(check){\r\n      setLikes(likes - 1)\r\n      setCheck(!check)\r\n    }\r\n    if(!check){\r\n      setLikes(likes +  1)\r\n      setCheck(!check)\r\n    }   \r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        subheader={date}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" className={classes.link} color=\"textSecondary\" component=\"p\" onClick={() => {\r\n            history.push(`/${id}`)}}>\r\n          {title}\r\n          {/* <Link to='/1'>{text}</Link> */}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\" color={check ? 'secondary' : 'textSecondary'} onClick={handleLike}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color={check ? 'secondary' : 'textSecondary'} component=\"span\">\r\n          {likes}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst ArticleList = () => {\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n  const [isError, setIsError] = React.useState(false)\r\n  const {todos} = React.useContext(TodoContext)\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(false)\r\n    setIsError(false)\r\n  }, [])\r\n  \r\n    return (\r\n        <div className='article-list'>\r\n            <Grid container>\r\n                {isLoading && <p>Loading</p>}\r\n                {isError && <p>Error</p>}\r\n                {todos.length == 0 && <p>Нет публикаций</p>}\r\n                  {todos.map((obj) => {\r\n                    return <Grid item key={obj.id}  xs={3}>\r\n                    <ArticleListItem title={obj.title} id={obj.id} like={obj.like} date={obj.date} />\r\n                    </Grid>\r\n                  })}  \r\n                \r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ArticleList)",["63","64"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx",["65"],"import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst Article= ({arcId}) => {\r\n    const [off, setOff] = React.useState(false)\r\n    const {todos, onRemoveTodo} = React.useContext(TodoContext)\r\n    const findItem = todos.find((todo) => todo.id == arcId)\r\n    const history = useHistory()\r\n    \r\n    const removeTodo = () => {\r\n        if (global.confirm('Вы действительно хотите удалить?')) {\r\n            onRemoveTodo(arcId)\r\n            history.push('/')\r\n          }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='article'>\r\n             <Grid container>\r\n                <Grid item xs={2}>\r\n                    <Link to='/'>\r\n                        <IconButton aria-label=\"delete\">\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {findItem.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n        {findItem.text}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <IconButton onClick={() => setOff(!off)} aria-label=\"delete\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    {off && <Grid container>\r\n                        <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            startIcon={<CreateIcon />}\r\n                            >\r\n                            Редактировать\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={removeTodo}\r\n                            startIcon={<DeleteIcon />}\r\n                            >\r\n                            Удалить\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n// const ModalWindow = () => {\r\n//     return (\r\n//         <>\r\n        \r\n//         </>\r\n//     )\r\n// }\r\n\r\nexport default Article\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx",["66","67"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Search() {\r\n  const [searchTerm, setSearchTerm] =  React.useState('')\r\n  const {searchTodo} = React.useContext(TodoContext)\r\n\r\n  React.useEffect(() => {\r\n    searchTodo(searchTerm)\r\n  }, [searchTerm])\r\n  // const searchArticle = (e) => {\r\n  //   e.preventDefault();\r\n  //   searchTodo(searchTerm)\r\n  // }\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper component=\"form\" className={classes.root} >\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase \r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className={classes.input}\r\n        placeholder=\"Поиск\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":28,"column":6,"nodeType":"80","endLine":28,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":36,"nodeType":"76","messageId":"77","endLine":9,"endColumn":41},{"ruleId":"82","severity":1,"message":"84","line":37,"column":18,"nodeType":"76","messageId":"77","endLine":37,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":42,"column":55,"nodeType":"87","messageId":"88","endLine":42,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":60,"column":20,"nodeType":"87","messageId":"88","endLine":60,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":63,"column":20,"nodeType":"87","messageId":"88","endLine":63,"endColumn":22},{"ruleId":"82","severity":1,"message":"89","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":5,"column":22,"nodeType":"76","messageId":"77","endLine":5,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":85,"column":31,"nodeType":"87","messageId":"88","endLine":85,"endColumn":33},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"85","severity":1,"message":"86","line":18,"column":51,"nodeType":"87","messageId":"88","endLine":18,"endColumn":53},{"ruleId":"82","severity":1,"message":"83","line":2,"column":22,"nodeType":"76","messageId":"77","endLine":2,"endColumn":27},{"ruleId":"78","severity":1,"message":"90","line":38,"column":6,"nodeType":"80","endLine":38,"endColumn":18,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"@typescript-eslint/no-unused-vars","'Example' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filterTodo'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-unused-vars","'Theme' is defined but never used.","'_' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","React Hook React.useEffect has a missing dependency: 'searchTodo'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [filter, filterTodo]",{"range":"100","text":"101"},"Update the dependencies array to be: [searchTerm, searchTodo]",{"range":"102","text":"103"},[846,854],"[filter, filterTodo]",[948,960],"[searchTerm, searchTodo]"]