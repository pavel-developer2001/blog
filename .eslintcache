[{"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx":"1","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx":"2","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx":"3","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.tsx":"4","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.tsx":"5","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.tsx":"6","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.tsx":"7","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.tsx":"8","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx":"9"},{"size":215,"mtime":1610020451223,"results":"10","hashOfConfig":"11"},{"size":1303,"mtime":1610020780521,"results":"12","hashOfConfig":"11"},{"size":1719,"mtime":1610020429899,"results":"13","hashOfConfig":"11"},{"size":3183,"mtime":1611180407664,"results":"14","hashOfConfig":"11"},{"size":1549,"mtime":1611180405290,"results":"15","hashOfConfig":"11"},{"size":5219,"mtime":1611183210012,"results":"16","hashOfConfig":"11"},{"size":2994,"mtime":1611180603828,"results":"17","hashOfConfig":"11"},{"size":839,"mtime":1611180677747,"results":"18","hashOfConfig":"11"},{"size":1973,"mtime":1611182252368,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"l03eey",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx",[],["45","46"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx",["47"],"import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { TodoContext } from \"../TodoContext\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nexport const firterList = {\n  DATE: \"По последним обновлениям\",\n  POPULAR: \"По популярности\",\n};\n\nexport default function Filter() {\n  const classes = useStyles();\n  const { filterTodo } = React.useContext(TodoContext);\n  const [filter, setFilter] = React.useState(firterList.DATE);\n\n  React.useEffect(() => {\n    filterTodo(filter);\n  }, [filter]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setFilter(event.target.value as string);\n  };\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Фильтер</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={filter}\n          onChange={handleChange}\n          label=\"Filter\"\n        >\n          <MenuItem value={firterList.DATE}>По последним обновлениям</MenuItem>\n          <MenuItem value={firterList.POPULAR}>По популярности</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.tsx",["48","49"],"import React from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nimport { TodoContext } from \"../TodoContext\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n    },\n    link: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype ArticleItem = {\n  title: string;\n  like: number;\n  id: number;\n  date: number;\n};\n\nfunction ArticleListItem({ title, like, id, date }: ArticleItem) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [likes, setLikes] = React.useState(like);\n  const [check, setCheck] = React.useState(false);\n\n  const handleLike = () => {\n    if (check) {\n      setLikes(likes - 1);\n      setCheck(!check);\n    }\n    if (!check) {\n      setLikes(likes + 1);\n      setCheck(!check);\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader subheader={date} />\n      <CardContent>\n        <Typography\n          variant=\"body2\"\n          className={classes.link}\n          color=\"textSecondary\"\n          component=\"p\"\n          onClick={() => {\n            history.push(`/${id}`);\n          }}\n        >\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          aria-label=\"add to favorites\"\n          color={check ? \"secondary\" : \"primary\"}\n          onClick={handleLike}\n        >\n          <FavoriteIcon />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          color={check ? \"secondary\" : \"textSecondary\"}\n          component=\"span\"\n        >\n          {likes}\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst ArticleList = () => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isError, setIsError] = React.useState(false);\n  const { todos } = React.useContext(TodoContext);\n  const [todos2, setTodos2] = React.useState(todos);\n\n  React.useEffect(() => {\n    setIsLoading(false);\n    setIsError(false);\n    console.log(\"Before\", todos);\n    setTodos2(todos);\n    console.log(\"After\", todos2);\n  }, [todos, todos2]);\n\n  return (\n    <div className=\"article-list\">\n      <Grid container>\n        {isLoading && <p>Loading</p>}\n        {isError && <p>Error</p>}\n        {todos2.length == 0 && <p>Нет публикаций</p>}\n        {todos2.map((obj: ArticleItem) => {\n          return (\n            <Grid item key={obj.id} xs={3}>\n              <ArticleListItem\n                title={obj.title}\n                id={obj.id}\n                like={obj.like}\n                date={obj.date}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(ArticleList);\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.tsx",["50"],"import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { TodoContext } from \"../TodoContext\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nexport default function Search() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const { searchTodo } = React.useContext(TodoContext);\n\n  React.useEffect(() => {\n    searchTodo(searchTerm);\n  }, [searchTerm]);\n  // const searchArticle = (e) => {\n  //   e.preventDefault();\n  //   searchTodo(searchTerm)\n  // }\n  const classes = useStyles();\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n      >\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className={classes.input}\n        placeholder=\"Поиск\"\n        inputProps={{ \"aria-label\": \"search google maps\" }}\n      />\n    </Paper>\n  );\n}\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.tsx",["51"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.tsx",["52"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { TodoContext } from \"../TodoContext\";\n\nimport { format } from \"date-fns\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"100%\",\n      },\n    },\n    btn: {\n      marginLeft: \"30px\",\n      marginTop: \"10px\",\n    },\n  })\n);\n\nconst CreateArticle = () => {\n  const classes = useStyles();\n  const { todos, addTodo } = React.useContext(TodoContext);\n  const [title, setTitle] = React.useState(\"\");\n  const [text, setText] = React.useState(\"\");\n\n  const [todo, _] = React.useState(todos);\n  const history = useHistory();\n\n  const handleSubmit = (\n    e:\n      | React.FormEvent<HTMLFormElement>\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    e.preventDefault();\n    if (title.length > 0) {\n      const newItem = {\n        id: todo.length + 1,\n        title,\n        text,\n        like: 0,\n        date: format(new Date(), \"dd/MM/yyyy kk:mm\"),\n      };\n      addTodo(newItem);\n      setTitle(\"\");\n      setText(\"\");\n      history.push(\"/\");\n    } else {\n      alert(\"Укажите заголовок статьи \");\n    }\n  };\n  return (\n    <div className=\"create-article\">\n      <Grid container>\n        <Grid item xs={3}>\n          <Link to=\"/\">\n            <IconButton aria-label=\"delete\">\n              <ArrowBackIcon />\n            </IconButton>\n          </Link>\n        </Grid>\n        <Grid item xs={7}>\n          <form\n            className={classes.root}\n            onSubmit={handleSubmit}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <div>\n              <TextField\n                id=\"outlined-textarea\"\n                label=\"Заголовок\"\n                multiline\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Текст\"\n                multiline\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                rows={4}\n                variant=\"outlined\"\n              />\n            </div>\n            <Button\n              className={classes.btn}\n              variant=\"contained\"\n              onClick={handleSubmit}\n              color=\"primary\"\n              disableElevation\n            >\n              Опубликовать\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CreateArticle;\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.tsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx",["53","54","55","56"],"import React from \"react\";\n\n\n\nexport const TodoContext = React.createContext();\n\nexport const TodoContextProvider = (props) => {\n  const [todos, setTodos] = React.useState([\n    {\n      id: 1,\n      title: \"Test1\",\n      text: \"test 1\",\n      like: 888,\n      date: \"04/01/2021 16:12\",\n    },\n    {\n      id: 2,\n      title: \"Test2\",\n      text: \"test 2\",\n      like: 5999,\n      date: \"04/01/2021 16:12\",\n    },\n    {\n      id: 3,\n      title: \"mobile\",\n      text: \"test 2\",\n      like: 5,\n      date: \"04/01/2021 16:12\",\n    },\n    {\n      id: 4,\n      title: \"alex\",\n      text: \"test 2\",\n      like: 57,\n      date: \"04/01/2021 16:12\",\n    },\n  ]);\n\n  const addTodo = (item) => {\n    setTodos([...todos, item]);\n  };\n\n  const onRemoveTodo = (index) => {\n    const idx = todos.findIndex((item) => item.id == index);\n    const items = [...todos.slice(0, idx), ...todos.slice(idx + 1)];\n    setTodos(items);\n  };\n\n  const searchTodo = (text) => {\n    if (text.length > 0) {\n      const results = todos.filter((todo) =>\n        todo.title.toLowerCase().includes(text)\n      );\n      setTodos(results);\n    }\n    return;\n  };\n\n  const filterTodo = (filter) => {\n    if (filter == \"По последним обновлениям\") {\n      const sortedData = todos.sort((a, b) => b.id - a.id);\n      setTodos(sortedData);\n    }\n    if (filter == \"По популярности\") {\n      const sortedPopular = todos.sort((a, b) => b.like - a.like);\n      setTodos(sortedPopular);\n    }\n  };\n\n  const editTodo = (editItem) => {\n    const findItem = todos.findIndex((item) => item.id == editItem.id);\n    const items = [...todos.slice(0, findItem), ...todos.slice(findItem + 1)];\n    setTodos([...items, editItem]);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        todos,\n        setTodos,\n        addTodo,\n        onRemoveTodo,\n        searchTodo,\n        filterTodo,\n        editTodo,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":33,"column":6,"nodeType":"65","endLine":33,"endColumn":14,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":107,"column":24,"nodeType":"73","messageId":"74","endLine":107,"endColumn":26},{"ruleId":"63","severity":1,"message":"75","line":38,"column":6,"nodeType":"65","endLine":38,"endColumn":18,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"72","line":46,"column":59,"nodeType":"73","messageId":"74","endLine":46,"endColumn":61},{"ruleId":"67","severity":1,"message":"77","line":36,"column":16,"nodeType":"69","messageId":"70","endLine":36,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":44,"column":51,"nodeType":"73","messageId":"74","endLine":44,"endColumn":53},{"ruleId":"71","severity":1,"message":"72","line":60,"column":16,"nodeType":"73","messageId":"74","endLine":60,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":64,"column":16,"nodeType":"73","messageId":"74","endLine":64,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":71,"column":56,"nodeType":"73","messageId":"74","endLine":71,"endColumn":58},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filterTodo'. Either include it or remove the dependency array.","ArrayExpression",["80"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'searchTodo'. Either include it or remove the dependency array.",["81"],"'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [filter, filterTodo]",{"range":"86","text":"87"},"Update the dependencies array to be: [searchTerm, searchTodo]",{"range":"88","text":"89"},[912,920],"[filter, filterTodo]",[924,936],"[searchTerm, searchTodo]"]