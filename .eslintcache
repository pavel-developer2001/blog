[{"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx":"1","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx":"2","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx":"3","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx":"4","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx":"5","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx":"6","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx":"7","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx":"8","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx":"9","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx":"10"},{"size":216,"mtime":1609677450726,"results":"11","hashOfConfig":"12"},{"size":1650,"mtime":1609673696477,"results":"13","hashOfConfig":"12"},{"size":1585,"mtime":1609740627400,"results":"14","hashOfConfig":"12"},{"size":1567,"mtime":1609675522906,"results":"15","hashOfConfig":"12"},{"size":3075,"mtime":1609752363878,"results":"16","hashOfConfig":"12"},{"size":1339,"mtime":1609761964090,"results":"17","hashOfConfig":"12"},{"size":2366,"mtime":1609764798594,"results":"18","hashOfConfig":"12"},{"size":810,"mtime":1609750991265,"results":"19","hashOfConfig":"12"},{"size":3005,"mtime":1609755933811,"results":"20","hashOfConfig":"12"},{"size":1564,"mtime":1609761765818,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"l03eey",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx",[],["50","51"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx",[],["52","53"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx",["54"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Example from '../components/Example'\r\nimport Filter from '../components/Filter'\r\nimport Search from '../components/Search'\r\nimport ArticleList from '../components/ArticleList'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst Home = () => {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <div className='home'>\r\n            <Search />\r\n            <Filter />\r\n            <Grid container>\r\n                <Grid xs={3} item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                    Публикации\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={9} item>\r\n                    <Link to='/create'>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        endIcon={<Icon>add_circle</Icon>}>\r\n                            Создать\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <ArticleList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx",["55","56"],"import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '100%'\r\n      },\r\n    },\r\n    btn: {\r\n        marginLeft: \"30px\",\r\n        marginTop: \"10px\"\r\n    },\r\n  }),\r\n);\r\n\r\nconst CreateArticle = () => {\r\n    const classes = useStyles();\r\n    const {todos, addTodo} = React.useContext(TodoContext)\r\n    const [title, setTitle] = React.useState('')\r\n    const [text, setText] = React.useState('')\r\n\r\n    const [todo, setTodo] = React.useState(todos)\r\n    const history = useHistory()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(title.length > 0){\r\n            const newItem = { id: todo.length + 1, title, text, like: 0}\r\n            addTodo(newItem)\r\n            setTitle('')\r\n            setText('')\r\n            history.push('/')\r\n        }\r\n        else{\r\n            alert('Укажите заголовок статьи ')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className='create-article'>\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <Link to='/'>\r\n                        <IconButton aria-label=\"delete\">\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                    <div>\r\n                        <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Заголовок\"\r\n                        multiline\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Текст\"\r\n                        multiline\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <Button className={classes.btn} variant=\"contained\" onClick={handleSubmit}  color=\"primary\" disableElevation>\r\n                    Опубликовать\r\n                    </Button>\r\n                </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArticle\r\n",["57","58"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx",["59"],"import React from 'react'\r\n\r\nexport const TodoContext = React.createContext();\r\n\r\nexport const TodoContextProvider = (props) => {\r\n    const [todos, setTodos] = React.useState([\r\n    {\r\n        id: 1,\r\n        title: \"Test1\",\r\n        text: \"test 1\",\r\n        like: 8\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Test2\",\r\n        text: \"test 2\",\r\n        like: 5\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"mobile\",\r\n        text: \"test 2\",\r\n        like: 5\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"alex\",\r\n        text: \"test 2\",\r\n        like: 5\r\n    },\r\n    ])\r\n\r\n    const addTodo = (item) => {\r\n        setTodos([...todos, item])\r\n    }\r\n\r\n    const onRemoveTodo = (index) => {\r\n        const idx = todos.findIndex((item) => item.id == index);\r\n        const items = [\r\n        ...todos.slice(0, idx),\r\n        ...todos.slice(idx + 1)\r\n      ]\r\n        setTodos(items)\r\n      };\r\n\r\n    const searchTodo = (text) => {\r\n        if (text.length > 0){\r\n            const results = todos.filter(todo => todo.title.toLowerCase().includes(text));\r\n            setTodos(results);  \r\n        }\r\n        return;        \r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n        value={{todos, setTodos, addTodo, onRemoveTodo, searchTodo}}\r\n        >\r\n             {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx",["60","61"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx",["62"],"import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst Article= ({arcId}) => {\r\n    const [off, setOff] = React.useState(false)\r\n    const {todos, onRemoveTodo} = React.useContext(TodoContext)\r\n    const findItem = todos.find((todo) => todo.id == arcId)\r\n    const history = useHistory()\r\n    \r\n    const removeTodo = () => {\r\n        if (global.confirm('Вы действительно хотите удалить?')) {\r\n            onRemoveTodo(arcId)\r\n            history.push('/')\r\n          }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='article'>\r\n             <Grid container>\r\n                <Grid item xs={2}>\r\n                    <Link to='/'>\r\n                        <IconButton aria-label=\"delete\">\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {findItem.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n        {findItem.text}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <IconButton onClick={() => setOff(!off)} aria-label=\"delete\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    {off && <Grid container>\r\n                        <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            startIcon={<CreateIcon />}\r\n                            >\r\n                            Редактировать\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={removeTodo}\r\n                            startIcon={<DeleteIcon />}\r\n                            >\r\n                            Удалить\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n// const ModalWindow = () => {\r\n//     return (\r\n//         <>\r\n        \r\n//         </>\r\n//     )\r\n// }\r\n\r\nexport default Article\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx",["63","64"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Search() {\r\n  const [searchTerm, setSearchTerm] =  React.useState('')\r\n  const {searchTodo} = React.useContext(TodoContext)\r\n\r\n  React.useEffect(() => {\r\n    searchTodo(searchTerm)\r\n  }, [searchTerm])\r\n  // const searchArticle = (e) => {\r\n  //   e.preventDefault();\r\n  //   searchTodo(searchTerm)\r\n  // }\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper component=\"form\" className={classes.root} >\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase \r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className={classes.input}\r\n        placeholder=\"Поиск\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":9,"column":36,"nodeType":"73","messageId":"74","endLine":9,"endColumn":41},{"ruleId":"75","severity":1,"message":"77","line":34,"column":18,"nodeType":"73","messageId":"74","endLine":34,"endColumn":25},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"78","severity":1,"message":"79","line":38,"column":55,"nodeType":"80","messageId":"81","endLine":38,"endColumn":57},{"ruleId":"75","severity":1,"message":"82","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":5,"column":22,"nodeType":"73","messageId":"74","endLine":5,"endColumn":27},{"ruleId":"78","severity":1,"message":"79","line":18,"column":51,"nodeType":"80","messageId":"81","endLine":18,"endColumn":53},{"ruleId":"75","severity":1,"message":"76","line":2,"column":22,"nodeType":"73","messageId":"74","endLine":2,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":38,"column":6,"nodeType":"85","endLine":38,"endColumn":18,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"@typescript-eslint/no-unused-vars","'Example' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Theme' is defined but never used.","'setTodo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'searchTodo'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [searchTerm, searchTodo]",{"range":"92","text":"93"},[948,960],"[searchTerm, searchTodo]"]