[{"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx":"1","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx":"2","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx":"3","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx":"4","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx":"5","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx":"6","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx":"7","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx":"8","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx":"9","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx":"10"},{"size":216,"mtime":1609677450726,"results":"11","hashOfConfig":"12"},{"size":1650,"mtime":1609673696477,"results":"13","hashOfConfig":"12"},{"size":1585,"mtime":1609740627400,"results":"14","hashOfConfig":"12"},{"size":1567,"mtime":1609675522906,"results":"15","hashOfConfig":"12"},{"size":3075,"mtime":1609752363878,"results":"16","hashOfConfig":"12"},{"size":1339,"mtime":1609761964090,"results":"17","hashOfConfig":"12"},{"size":1983,"mtime":1609754286394,"results":"18","hashOfConfig":"12"},{"size":810,"mtime":1609750991265,"results":"19","hashOfConfig":"12"},{"size":3005,"mtime":1609755933811,"results":"20","hashOfConfig":"12"},{"size":1564,"mtime":1609761765818,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"l03eey",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\index.tsx",[],["49","50"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Example.tsx",[],["51","52"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Home.tsx",["53"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Example from '../components/Example'\r\nimport Filter from '../components/Filter'\r\nimport Search from '../components/Search'\r\nimport ArticleList from '../components/ArticleList'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst Home = () => {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <div className='home'>\r\n            <Search />\r\n            <Filter />\r\n            <Grid container>\r\n                <Grid xs={3} item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                    Публикации\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={9} item>\r\n                    <Link to='/create'>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        endIcon={<Icon>add_circle</Icon>}>\r\n                            Создать\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <ArticleList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Filter.tsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\CreateArticle.jsx",["54","55"],"import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '100%'\r\n      },\r\n    },\r\n    btn: {\r\n        marginLeft: \"30px\",\r\n        marginTop: \"10px\"\r\n    },\r\n  }),\r\n);\r\n\r\nconst CreateArticle = () => {\r\n    const classes = useStyles();\r\n    const {todos, addTodo} = React.useContext(TodoContext)\r\n    const [title, setTitle] = React.useState('')\r\n    const [text, setText] = React.useState('')\r\n\r\n    const [todo, setTodo] = React.useState(todos)\r\n    const history = useHistory()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(title.length > 0){\r\n            const newItem = { id: todo.length + 1, title, text, like: 0}\r\n            addTodo(newItem)\r\n            setTitle('')\r\n            setText('')\r\n            history.push('/')\r\n        }\r\n        else{\r\n            alert('Укажите заголовок статьи ')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className='create-article'>\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <Link to='/'>\r\n                        <IconButton aria-label=\"delete\">\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                    <div>\r\n                        <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Заголовок\"\r\n                        multiline\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Текст\"\r\n                        multiline\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <Button className={classes.btn} variant=\"contained\" onClick={handleSubmit}  color=\"primary\" disableElevation>\r\n                    Опубликовать\r\n                    </Button>\r\n                </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArticle\r\n",["56","57"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\TodoContext.jsx",["58"],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\ArticleList.jsx",["59","60"],"import React from 'react';\r\nimport {Link, useHistory, withRouter} from 'react-router-dom'\r\nimport { TodoContext } from '../TodoContext';\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    }\r\n  }),\r\n);\r\n\r\nfunction ArticleListItem({title, like, id}) {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" onClick={() => {\r\n            history.push(`/${id}`)}}>\r\n          {title}\r\n          {/* <Link to='/1'>{text}</Link> */}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">\r\n          {like}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst ArticleList = () => {\r\n  const {todos} = React.useContext(TodoContext)\r\n    return (\r\n        <div className='article-list'>\r\n            <Grid container>\r\n                \r\n                  {todos.map((obj) => {\r\n                    return <Grid item key={obj.id}  xs={3}>\r\n                    <ArticleListItem title={obj.title} id={obj.id} like={obj.like} />\r\n                    </Grid>\r\n                  })}  \r\n                \r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ArticleList)","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\App.jsx",[],"C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\pages\\Article.jsx",["61"],"import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport {TodoContext} from '../TodoContext'\r\n\r\nconst Article= ({arcId}) => {\r\n    const [off, setOff] = React.useState(false)\r\n    const {todos, onRemoveTodo} = React.useContext(TodoContext)\r\n    const findItem = todos.find((todo) => todo.id == arcId)\r\n    const history = useHistory()\r\n    \r\n    const removeTodo = () => {\r\n        if (global.confirm('Вы действительно хотите удалить?')) {\r\n            onRemoveTodo(arcId)\r\n            history.push('/')\r\n          }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='article'>\r\n             <Grid container>\r\n                <Grid item xs={2}>\r\n                    <Link to='/'>\r\n                        <IconButton aria-label=\"delete\">\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {findItem.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n        {findItem.text}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <IconButton onClick={() => setOff(!off)} aria-label=\"delete\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    {off && <Grid container>\r\n                        <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            startIcon={<CreateIcon />}\r\n                            >\r\n                            Редактировать\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={removeTodo}\r\n                            startIcon={<DeleteIcon />}\r\n                            >\r\n                            Удалить\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n// const ModalWindow = () => {\r\n//     return (\r\n//         <>\r\n        \r\n//         </>\r\n//     )\r\n// }\r\n\r\nexport default Article\r\n","C:\\Users\\Pavel\\Documents\\web\\progects\\blog\\src\\components\\Search.jsx",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":10,"column":8,"nodeType":"72","messageId":"73","endLine":10,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":9,"column":36,"nodeType":"72","messageId":"73","endLine":9,"endColumn":41},{"ruleId":"74","severity":1,"message":"76","line":34,"column":18,"nodeType":"72","messageId":"73","endLine":34,"endColumn":25},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"77","severity":1,"message":"78","line":38,"column":55,"nodeType":"79","messageId":"80","endLine":38,"endColumn":57},{"ruleId":"74","severity":1,"message":"81","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":5,"column":22,"nodeType":"72","messageId":"73","endLine":5,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":18,"column":51,"nodeType":"79","messageId":"80","endLine":18,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":2,"column":22,"nodeType":"72","messageId":"73","endLine":2,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":38,"column":6,"nodeType":"84","endLine":38,"endColumn":18,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"@typescript-eslint/no-unused-vars","'Example' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Theme' is defined but never used.","'setTodo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'searchTodo'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [searchTerm, searchTodo]",{"range":"91","text":"92"},[948,960],"[searchTerm, searchTodo]"]